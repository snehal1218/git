pipeline {
          agent any
          stages {
                    stage ('one') {
                                steps {
                                  echo 'Hi,This is snehal'
                                      }
                                  }
                    stage ('two') {
                                steps {
                                input('Do yo want to proceed')
                                      }
                                }
                     stage ('three') {
                                    when {
                                      not {
                                           branch "main"
                                           }
                                          }
                                  steps {
                                      echo 'Hello'
                                   }
                                 }
                      stage ('four') {
                                parallel { 
                                  stage ('unit test') {
                                                      steps {
                                                      echo 'Running the unit test...'
                                                      }
                                                    }
                                  stage ('integration test') {
                                                         agent {
                                                            docker {
                                                                    reuseNode false
                                                                    image 'ubuntu'
                                                                    }
                                                                  }
                                                                  steps {
                                                                      echo 'running the integration test...'
                                                                        }
                                                            }
                                                  
                                      }
                    }
          }
}
